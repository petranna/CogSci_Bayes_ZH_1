1.1. feladat (kész)

"Írj következtetésre olyan ComplexModel1-et, ami ilyen premisszákat generál véletlenszerűen: Panni "könyvtáros/tanár" "és/vagy" "csendes/cserfes" és ebből logikailag helyesen következtetne olyan konklúzióra, hogy "Panni csendes/cserfes", DE! sajnos diszlexiás az ágens és a "csendes/cserfes"-t valamilyen valószínűséggel felcseréli."

var feature1 = ['könyvtáros', 'tanár'];
var feature2 = ['csendes', 'cserfes'];
var operator = [' és ', ' vagy '];
var csere = 0.4;

var ComplexModel1 = function () {
    var word1 = uniformDraw(feature1);
    var op = uniformDraw(operator);
    var word2 = uniformDraw(feature2);
    print('Premissza: Anna ' + word1 + op + word2 + '.');
    var word3 = uniformDraw(feature2);
    print('Konklúzió: Anna ' + word3 + '.');
  
    var diszlexia = flip(csere) ? word2 : word3;
    var érvényes_diszlexia = (op == ' és ')
        ? ((word2 == csere || word2 != csere) ? 'érvényes' : 'nem érvényes')
        : 'nem érvényes';
    print(érvényes_diszlexia);
    return érvényes_diszlexia;
};

var output = Infer({ model: ComplexModel1, method: 'rejection', samples: 1 });

1.2. feladat (kész)

"Írj következtetésre olyan ComplexModel2-t, ami ilyen premisszákat tartalmaz: Panni "könyvtáros/tanár" "és/vagy" "csendes/cserfes" és ebből logikailag helyesen következtetne olyan konklúzióra, hogy "Panni csendes/cserfes" ill. "Panni könyvtáros/tanár", DE! az "és"-t 95%-ban a klasszikus logikának megfelelően használja, de elég gyakran, 80%-os valószínűséggel néha a vagy-ot és-nek olvassa. Vö.: "Jaj! valami ördög... vagy ha nem, hát... kis nyúl!"."

var feature1 = ['könyvtáros','tanár'];
var feature2 = ['csendes','cserfes'];
var operator = [' és ',' vagy '];
var csere_és = 0.05;
var csere_vagy = 0.80;

var SimpleModel = function() {
    var word1 = uniformDraw(feature1)
    var op = uniformDraw(operator)
  
    var word2  = uniformDraw(feature2)
    print('Premissza: Anna ' + word1 + op + word2 + '.'); 
    var word3 = uniformDraw(feature2)
    print('Konklúzió: Anna ' + word3 + '.'); 
  
    var és_nemérti = flip(csere_és) ? op : op
    var vagy_nemérti = flip(csere_vagy) ? op : op
    var érvényes = (op == csere_és || op != csere_és && op == csere_vagy || op != csere_vagy)
                   ? ((word2 == word3) ? 'érvényes' : 'nem érvényes') 
                   : 'nem érvényes'
    print(érvényes); 
    return érvényes
}
 
var output = 
  Infer({model: SimpleModel, method:'rejection', samples: 1})

1.3. feladat (kész)

"Programozz be egy olyan modellt, ami kiszámolja, hogy mi annak a valószínűsége, hogy ha két kockával dobunk, akkor az összeg legalább 4 lesz!"

var összeg_legalább_4 = function () {
  var kocka1 = categorical({ps: [1/6, 1/6, 1/6, 1/6, 1/6, 1/6], 
                            vs: [1, 2, 3, 4, 5, 6]});
  var kocka2 = categorical({ps: [1/6, 1/6, 1/6, 1/6, 1/6, 1/6], 
                            vs: [1, 2, 3, 4, 5, 6]});
  condition((kocka1 >= 2 && kocka2 >= 2));
  return [kocka1,kocka2];
}

var eloszlás = Enumerate(összeg_legalább_4);

viz.table(eloszlás);


1.4. feladat (kész)

"(King-Ace Paradox, bemelegítő) Tudjuk, hogy a klasszikus logikában a "Ha ász van a kezemben, akkor király van, vagy ha nincs ász a kezemben, akkor király van a kezemben" mondatból nem következik feltétlenül, hogy király van a kezemben (miért?), sőt, ha a mondatban szereplő "vagy"-ot kizáró vagy értelemében használjuk, akkor kifejezetten az következik belőle, hogy nincs király a kezemben. Írj programot, ami a helyzetet modellezi úgy, hogy a mondatbeli "vagy" jelentése néha "és" néha "vagy" néha "kizáró vagy". Vö.: The Cambridge Handbook of Computational Psychology, ed.: Ron Sun, 2008, Cambrigde, p. 137."

var első_tag = ['ász és király'];
var második_tag = ['nem ász és király'];
var operator = [' és ',' vagy ', ' kizáró vagy '];

var King_Ace_Paradox = function() {
    var op = uniformDraw(operator)
    print('King-Ace Paradox: ' + első_tag + op + második_tag + '.');
}

King_Ace_Paradox();
